{"version":3,"sources":["webpack:///./src/components/sortable-table/index.js","webpack:///./src/components/range-picker/index.js","webpack:///./src/utils/fetch-json.js","webpack:///./src/components/column-chart/index.js","webpack:///./src/pages/dashboard/bestsellers-header.js","webpack:///./src/pages/dashboard/index.js"],"names":["SortableTable","constructor","headersConfig","data","url","sorted","id","find","el","sortable","order","isSortLocally","rowTemplate","content","async","element","event","target","closest","this","toggleOrder","dataset","append","subElements","arrow","sort","hasDataLoad","tableHeight","scrollHeight","offsetTop","document","documentElement","clientHeight","window","pageYOffset","isLoading","loadMore","end","string","arr","key","a","b","result","localeCompare","localeMatcher","caseFirst","number","date","Date","URL","render","table","toHTML","getTemplate","innerHtml","getSubElements","addEventListeners","getHeader","getBody","map","item","getHeaderCell","join","title","getArrow","getDefaultCellTemplate","value","getRows","dataItem","cells","template","getRow","field","sortOnClient","sortOnServer","body","classList","remove","innerHTML","length","add","sortType","forEach","sortFunctions","loadData","start","addLoader","searchParams","set","response","fetch","toString","json","removeLoader","error","console","htmlString","htmlObject","createElement","firstElementChild","asc","desc","root","querySelectorAll","header","addEventListener","onClick","onScroll","removeEventListeners","removeEventListener","offset","step","wrapper","children","destroy","RangePicker","toLocaleString","dateStyle","from","to","isOpen","contains","isRangePicker","close","showDateFrom","selected","formatDate","initEventListeners","Promise","resolve","subElement","elem","input","selector","onDocumentClick","toggle","onSelectorClick","renderDateRangePicker","onRangePickerCellClick","showDate1","showDate2","setMonth","getMonth","renderCalendar","controlLeft","querySelector","controlRight","prev","next","renderHighlight","cell","cellDate","toISOString","selectedFromElem","selectedToElem","showDate","setDate","monthStr","month","dayIndex","getDay","getDate","dateValue","selectingFrom","dispatchEvent","CustomEvent","bubbles","detail","FetchError","Error","message","super","reason","alert","ColumnChart","range","label","link","formatHeading","heading","href","height","chartHeight","update","process","params","err","ok","errorText","statusText","status","fetchJson","Object","values","maxValue","Math","max","reduce","acc","val","builder","createLink","createChartItem","String","floor","toFixed","Page","updateComponents","initComponents","renderComponents","rangePicker","ordersChart","salesChart","customersChart","sortableTable","initSortableTable","components","bestsellersUrl","component","entries","replaceWith","onChangeRange"],"mappings":"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","file":"dashboard-index-js-2.js","sourcesContent":["export default class SortableTable {\n  element;\n  hasDataLoad = true;\n\n  onClick = async event => {\n    const element = event.target.closest('[data-sortable=\"true\"]');\n    if (!element) return;\n    const order = this.toggleOrder(element.dataset.order);\n    element.dataset.order = order;\n    element.append(this.subElements.arrow);\n    await this.sort(element.dataset.id, order);\n    this.sorted.id = element.dataset.id;\n    this.sorted.order = order;\n  };\n  onScroll = () => {\n    if (!this.hasDataLoad) return;\n    const tableHeight = this.element.scrollHeight + this.element.offsetTop;\n    const scrollSize = document.documentElement.clientHeight + window.pageYOffset;\n    if (scrollSize >= tableHeight - 100 && !this.isLoading) {\n      this.loadMore();\n    }\n  };\n\n  isLoading = false;\n  start = 0;\n  end = 30;\n  step = 30;\n  offset = this.end;\n\n  constructor(\n    headersConfig,\n    {\n      data = [],\n      url = '',\n      sorted = {\n        id: headersConfig.find(el => el.sortable).id,\n        order: 'asc'\n      },\n      isSortLocally = false,\n      rowTemplate = (content) => `<div class=\"sortable-table__row\">${content}</div>`,\n    } = {}\n  ) {\n    this.headersConfig = headersConfig;\n    this.data = data;\n    this.url = new URL(url);\n    this.rowTemplate = rowTemplate;\n    this.sorted = sorted;\n    this.isSortLocally = isSortLocally;\n\n    this.render();\n  }\n\n  async render() {\n    const table = this.toHTML(this.getTemplate());\n\n    if (this.element) this.element.innerHtml = table.innerHtml;\n    else this.element = table;\n\n    this.subElements = this.getSubElements(this.element);\n    this.addEventListeners();\n\n    await this.sort(this.sorted.id, this.sorted.order);\n  }\n\n  getTemplate() {\n    return `\n      <div class=\"sortable-table\">\n        ${this.getHeader()}\n        ${this.getBody()}\n        <div data-element=\"loading\" class=\"loading-line sortable-table__loading-line\"></div>\n        <div data-element=\"emptyPlaceholder\" class=\"sortable-table__empty-placeholder\">\n          <div>\n            <p>No products satisfies your filter criteria</p>\n            <button type=\"button\" class=\"button-primary-outline\" data-element=\"resetFilterBtn\">Reset all filters</button>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  getHeader() {\n    const headerCells = this.headersConfig.map(item => this.getHeaderCell(item));\n    return `\n      <div data-element=\"header\" class=\"sortable-table__header sortable-table__row\">${headerCells.join(\n        ''\n      )}</div>\n    `;\n  }\n\n  getHeaderCell({ id = '', title = '', sortable = false } = {}) {\n    const arrow = this.sorted.id === id ? this.getArrow() : '';\n    return `\n      <div class=\"sortable-table__cell\" id=\"${id}\" data-id=\"${id}\" data-sortable=\"${sortable}\" data-order=\"${this.sorted.order}\">\n        <span>${title}</span>\n        ${arrow}\n      </div>\n    `;\n  }\n\n  getDefaultCellTemplate(value) {\n    return `\n      <div class=\"sortable-table__cell\">${value}</div>\n    `;\n  }\n\n  getBody() {\n    return `<div data-element=\"body\" class=\"sortable-table__body\">${this.getRows().join('')}</div>`;\n  }\n\n  getRows(data = []) {\n    return data.map(dataItem => {\n      const cells = this.headersConfig.map(item => {\n        const value = dataItem[item.id];\n        const cell = item.template ? item.template(value) : this.getDefaultCellTemplate(value);\n        return cell;\n      });\n      return this.getRow(cells.join(''), dataItem);\n    });\n  }\n\n  getRow(cells, dataItem) {\n    return this.rowTemplate(cells, dataItem)\n    // if (this.rowLinkFrom) {\n    //   return `<a href=\"/products/3d-ochki-epson-elpgs03\" class=\"sortable-table__row\">${cells}</a>`;\n    // } else {\n    //   return `<div class=\"sortable-table__row\">${cells}</div>`;\n    // }\n  }\n\n  async sort(field = this.sorted.id, order = this.sorted.order) {\n    let data = this.isSortLocally\n      ? this.sortOnClient(field, order)\n      : await this.sortOnServer(field, order);\n    if (this.subElements && this.subElements.body) {\n      this.element.classList.remove('sortable-table_empty');\n      this.subElements.body.innerHTML = this.getRows(data).join('');\n    }\n    if(!data.length) this.element.classList.add('sortable-table_empty');\n  }\n\n  sortOnClient(id, order) {\n    let sortType = '';\n\n    this.headersConfig.forEach(el => {\n      if (el.id === id) {\n        el.order = order;\n        sortType = el.sortType;\n      } else {\n        el.order = false;\n      }\n    });\n\n    if (!sortType) return;\n\n    return this.sortFunctions[sortType](this.data, id, order);\n  }\n\n  sortFunctions = {\n    string: (arr, key, order = 'asc') => {\n      return arr.sort((a, b) => {\n        let result = a[key].localeCompare(b[key], ['ru-RU', 'es-US'], {\n          localeMatcher: 'lookup',\n          caseFirst: 'upper'\n        });\n        if (order === 'desc') result *= -1;\n        return result;\n      });\n    },\n    number: (arr, key, order = 'asc') => {\n      return arr.sort((a, b) => {\n        let result = a[key] - b[key];\n        if (order === 'desc') result *= -1;\n        return result;\n      });\n    },\n    date: (arr, key, order = 'asc') => {\n      return arr.sort((a, b) => {\n        let result = new Date(b[key]) - new Date(a[key]);\n        if (order === 'desc') result *= -1;\n        return result;\n      });\n    }\n  };\n\n  async sortOnServer(id, order) {\n    return await this.loadData(id, order);\n  }\n\n  async loadData(id, order, start = this.start, end = this.end) {\n    this.addLoader();\n\n    this.url.searchParams.set('_sort', id);\n    this.url.searchParams.set('_order', order);\n    this.url.searchParams.set('_start', start);\n    this.url.searchParams.set('_end', end);\n\n    try {\n      const response = await fetch(this.url.toString());\n      const data = await response.json();\n      this.removeLoader();\n      return data;\n    } catch (error) {\n      console.error('Loading data error in sortable table', error);\n    }\n  }\n\n  getArrow() {\n    return `\n      <span data-element=\"arrow\" class=\"sortable-table__sort-arrow\">\n        <span class=\"sort-arrow\"></span>\n      </span>\n    `;\n  }\n\n  toHTML(htmlString) {\n    const htmlObject = document.createElement('div');\n    htmlObject.innerHTML = htmlString;\n    return htmlObject.firstElementChild;\n  }\n\n  toggleOrder(order) {\n    const orders = {\n      asc: 'desc',\n      desc: 'asc'\n    };\n\n    return orders[order] || 'desc';\n  }\n\n  getSubElements(root) {\n    const subElements = {};\n    [...root.querySelectorAll('[data-element]')].forEach(el => {\n      subElements[el.dataset.element] = el;\n    });\n    return subElements;\n  }\n\n  addEventListeners() {\n    this.subElements.header.addEventListener('pointerdown', this.onClick);\n    document.addEventListener('scroll', this.onScroll);\n  }\n  removeEventListeners() {\n    this.subElements.header.removeEventListener('pointerdown', this.onClick);\n    document.removeEventListener('scroll', this.onScroll);\n  }\n\n  async loadMore() {\n    const start = this.offset;\n    const end = this.offset + this.step;\n    const data = await this.loadData(this.sorted.id, this.sorted.order, start, end);\n\n    if (data.length) {\n      const wrapper = document.createElement('div');\n      wrapper.innerHTML = this.getRows(data);\n      this.subElements.body.append(...wrapper.children);\n      this.offset = end;\n    } else {\n      this.hasDataLoad = false;\n    }\n  }\n\n  addLoader() {\n    this.isLoading = true;\n    this.element.classList.add('sortable-table_loading');\n  }\n\n  removeLoader() {\n    this.isLoading = false;\n    this.element.classList.remove('sortable-table_loading');\n  }\n\n  remove() {\n    if (this.element) this.element.remove();\n    this.element = null;\n  }\n\n  destroy() {\n    this.remove();\n    this.removeEventListeners();\n  }\n}\n","export default class RangePicker {\n  element = null;\n  subElements = {};\n  selectingFrom = true;\n  selected = {\n    from: new Date(),\n    to: new Date()\n  };\n\n  static formatDate (date) {\n    return date.toLocaleString('ru', {dateStyle: 'short'})\n  }\n\n  onDocumentClick = event => {\n    const isOpen = this.element.classList.contains('rangepicker_open');\n    const isRangePicker = this.element.contains(event.target);\n\n    if (isOpen && !isRangePicker) {\n      this.close();\n    }\n  };\n\n  constructor({from = new Date(), to = new Date()} = {}) {\n    this.showDateFrom = new Date(from);\n    this.selected = {from, to};\n\n    this.render();\n  }\n\n  get template () {\n    const from = RangePicker.formatDate(this.selected.from);\n    const to = RangePicker.formatDate(this.selected.to);\n\n    return `<div class=\"rangepicker\">\n      <div class=\"rangepicker__input\" data-elem=\"input\">\n        <span data-elem=\"from\">${from}</span> -\n        <span data-elem=\"to\">${to}</span>\n      </div>\n      <div class=\"rangepicker__selector\" data-elem=\"selector\"></div>\n    </div>`;\n  }\n\n  render() {\n    const element = document.createElement('div');\n\n    element.innerHTML = this.template;\n\n    this.element = element.firstElementChild;\n    this.subElements = this.getSubElements(element);\n\n    this.initEventListeners();\n\n    return Promise.resolve(this.element);\n  }\n\n  getSubElements (element) {\n    const subElements = {};\n\n    for (const subElement of element.querySelectorAll('[data-elem]')) {\n      subElements[subElement.dataset.elem] = subElement;\n    }\n\n    return subElements;\n  }\n\n  initEventListeners () {\n    const {input, selector} = this.subElements;\n\n    document.addEventListener('pointerup', this.onDocumentClick, true);\n    input.addEventListener('pointerup', () => this.toggle());\n    selector.addEventListener('pointerup', event => this.onSelectorClick(event));\n  }\n\n  toggle() {\n    this.element.classList.toggle('rangepicker_open');\n    this.renderDateRangePicker();\n  }\n\n  onSelectorClick({target}) {\n    if (target.classList.contains('rangepicker__cell')) {\n      this.onRangePickerCellClick(target);\n    }\n  }\n\n  close() {\n    this.element.classList.remove('rangepicker_open');\n  }\n\n  renderDateRangePicker() {\n    const showDate1 = new Date(this.showDateFrom);\n    const showDate2 = new Date(this.showDateFrom);\n    const { selector } = this.subElements;\n\n    showDate2.setMonth(showDate2.getMonth() + 1);\n\n    selector.innerHTML = `\n      <div class=\"rangepicker__selector-arrow\"></div>\n      <div class=\"rangepicker__selector-control-left\"></div>\n      <div class=\"rangepicker__selector-control-right\"></div>\n      ${this.renderCalendar(showDate1)}\n      ${this.renderCalendar(showDate2)}\n    `;\n\n    const controlLeft = selector.querySelector('.rangepicker__selector-control-left');\n    const controlRight = selector.querySelector('.rangepicker__selector-control-right');\n\n    controlLeft.addEventListener('pointerup', () => this.prev());\n    controlRight.addEventListener('pointerup', () => this.next());\n\n    this.renderHighlight();\n  }\n\n  prev () {\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() - 1);\n    this.renderDateRangePicker();\n  }\n\n  next () {\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() + 1);\n    this.renderDateRangePicker();\n  }\n\n  renderHighlight() {\n    const { from, to } = this.selected;\n\n    for (const cell of this.element.querySelectorAll('.rangepicker__cell')) {\n      const { value } = cell.dataset;\n      const cellDate = new Date(value);\n\n      cell.classList.remove('rangepicker__selected-from');\n      cell.classList.remove('rangepicker__selected-between');\n      cell.classList.remove('rangepicker__selected-to');\n\n      if (from && value === from.toISOString()) {\n        cell.classList.add('rangepicker__selected-from');\n      } else if (to && value === to.toISOString()) {\n        cell.classList.add('rangepicker__selected-to');\n      } else if (from && to && cellDate >= from && cellDate <= to) {\n        cell.classList.add('rangepicker__selected-between');\n      }\n    }\n\n    if (from) {\n      const selectedFromElem = this.element.querySelector(`[data-value=\"${from.toISOString()}\"]`);\n      if (selectedFromElem) {\n        selectedFromElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-from');\n      }\n    }\n\n    if (to) {\n      const selectedToElem = this.element.querySelector(`[data-value=\"${to.toISOString()}\"]`);\n      if (selectedToElem) {\n        selectedToElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-to');\n      }\n    }\n  }\n\n  renderCalendar(showDate) {\n    const date = new Date(showDate);\n    const getGridStartIndex = dayIndex => {\n      const index = dayIndex === 0 ? 6 : (dayIndex - 1); // make Sunday (0) the last day\n      return index + 1;\n    };\n\n    date.setDate(1);\n\n    // text-transform: capitalize\n    const monthStr = date.toLocaleString('ru', {month: 'long'});\n\n    let table = `<div class=\"rangepicker__calendar\">\n      <div class=\"rangepicker__month-indicator\">\n        <time datetime=${monthStr}>${monthStr}</time>\n      </div>\n      <div class=\"rangepicker__day-of-week\">\n        <div>Пн</div><div>Вт</div><div>Ср</div><div>Чт</div><div>Пт</div><div>Сб</div><div>Вс</div>\n      </div>\n      <div class=\"rangepicker__date-grid\">\n    `;\n\n    // first day of month starts after a space\n    // * * * 1 2 3 4\n    table += `\n      <button type=\"button\"\n        class=\"rangepicker__cell\"\n        data-value=\"${date.toISOString()}\"\n        style=\"--start-from: ${getGridStartIndex(date.getDay())}\">\n          ${date.getDate()}\n      </button>`;\n\n    date.setDate(2);\n\n    while (date.getMonth() === showDate.getMonth()) {\n      table += `\n        <button type=\"button\"\n          class=\"rangepicker__cell\"\n          data-value=\"${date.toISOString()}\">\n            ${date.getDate()}\n        </button>`;\n\n      date.setDate(date.getDate() + 1);\n    }\n\n    // close the table\n    table += '</div></div>';\n\n    return table;\n  }\n\n  onRangePickerCellClick(target) {\n    const { value } = target.dataset;\n\n    if (value) {\n      const dateValue = new Date(value);\n\n      if (this.selectingFrom) {\n        this.selected = {\n          from: dateValue,\n          to:   null\n        };\n        this.selectingFrom = false;\n        this.renderHighlight();\n      } else {\n        if (dateValue > this.selected.from) {\n          this.selected.to = dateValue;\n        } else {\n          this.selected.to = this.selected.from;\n          this.selected.from = dateValue;\n        }\n\n        this.selectingFrom = true;\n        this.renderHighlight();\n      }\n\n      if (this.selected.from && this.selected.to) {\n        this.dispatchEvent();\n        this.close();\n        this.subElements.from.innerHTML = RangePicker.formatDate(this.selected.from);\n        this.subElements.to.innerHTML = RangePicker.formatDate(this.selected.to)\n      }\n    }\n  }\n\n  dispatchEvent () {\n    this.element.dispatchEvent(new CustomEvent('date-select', {\n      bubbles: true,\n      detail:  this.selected\n    }));\n  }\n\n  remove () {\n    this.element.remove();\n    // TODO: Warning! To remove listener  MUST be passes the same event phase\n    document.removeEventListener('pointerup', this.onDocumentClick, true);\n  }\n\n  destroy() {\n    this.remove();\n    this.element = null;\n    this.subElements = {};\n    this.selectingFrom = true;\n    this.selected = {\n      from: new Date(),\n      to: new Date()\n    };\n\n    return this;\n  }\n}\n","// same as fetch, but throws FetchError in case of errors\n// status >= 400 is an error\n// network error / json error are errors\n\nexport default async function(url, params) {\n  let response;\n\n  try {\n    // NOTE: \"toString\" call needed for correct work of \"jest-fetch-mock\"\n    response = await fetch(url.toString(), params);\n  } catch(err) {\n    throw new FetchError(response, \"Network error has occurred.\");\n  }\n\n  let body;\n\n  if (!response.ok) {\n    let errorText = response.statusText; // Not Found (for 404)\n\n    try {\n      body = await response.json();\n\n      errorText = (body.error && body.error.message) || (body.data && body.data.error && body.data.error.message) || errorText;\n    } catch (error) { /* ignore failed body */ }\n\n    let message = `Error ${response.status}: ${errorText}`;\n\n    throw new FetchError(response, body, message);\n  }\n\n  try {\n    return await response.json();\n  } catch(err) {\n    throw new FetchError(response, null, err.message);\n  }\n}\n\nexport class FetchError extends Error {\n  name = \"FetchError\";\n\n  constructor(response, body, message) {\n    super(message);\n    this.response = response;\n    this.body = body;\n  }\n}\n\n// handle uncaught failed fetch through\nwindow.addEventListener('unhandledrejection', event => {\n  if (event.reason instanceof FetchError) {\n    alert(event.reason.message);\n  }\n});\n\n","import fetchJson from '~utils/fetch-json.js';\n\nexport default class ColumnChart {\n  constructor({\n    url = '',\n    range = {},\n    label = '',\n    link = '',\n    value = 0,\n    formatHeading = heading => heading\n  } = {}) {\n    this.url = url;\n    this.range = range;\n    this.data = [];\n    this.label = label;\n    this.value = value;\n    this.link = link;\n    this.formatHeading = formatHeading;\n    this.chartHeight = 50;\n\n    this.render();\n    this.update(this.range.from, this.range.to);\n  }\n\n  async update(from, to) {\n    const url = new URL(this.url, process.env.BACKEND_URL);\n    url.searchParams.set('from', from);\n    url.searchParams.set('to', to);\n\n    try {\n      const data = await fetchJson(url);\n      this.data = Object.values(data);\n      this.maxValue = Math.max(...this.data);\n      this.value = this.data.reduce((acc, val) => acc += val, 0);\n\n      const header = this.getHeader();\n      const body = this.getBody();\n      this.subElements.header.innerHTML = this.toHTML(header).innerHTML;\n      this.subElements.body.innerHTML = this.toHTML(body).innerHTML;\n      this.element.classList.remove('column-chart_loading');\n\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    this.element = this.toHTML(this.builder());\n    this.subElements = this.getSubElements(this.element);\n  }\n\n  builder() {\n    this.link = this.link ? this.createLink(this.link) : '';\n    return this.getTemplate();\n  }\n\n  getTemplate() {\n    return `\n    <div class=\"column-chart ${ !this.data.length ? 'column-chart_loading' : ''}\" style=\"--chart-height: ${this.chartHeight};\">\n      <div class=\"column-chart__title\">\n        Total ${this.label}\n        ${this.link}\n      </div>\n      <div class=\"column-chart__container\">\n        ${this.getHeader()}\n        ${this.getBody()}\n      </div>\n    </div>\n  `;}\n\n  createLink = (href) => `<a class=\"column-chart__link\" href=\"${href}\">View all</a>`;\n\n  getHeader() {\n    return `<div data-element=\"header\" class=\"column-chart__header\">${this.formatHeading(this.value)}</div>`;\n  }\n\n  getBody() {\n    const chart = this.data.map((item) => {\n      return this.createChartItem({\n        height: String(Math.floor(item * (this.chartHeight / this.maxValue))),\n        value: (item / this.maxValue * 100).toFixed(0) + '%',\n      });\n    }).join('');\n    return `<div data-element=\"body\" class=\"column-chart__chart\">${chart}</div>`;\n  }\n  createChartItem = ({height, value}) => `<div style=\"--value: ${height}\" data-tooltip=\"${value}\"></div>`;\n\n  getSubElements(root) {\n    const subElements = {};\n    [...root.querySelectorAll('[data-element]')].forEach((el) => {\n      subElements[el.dataset.element] = el;\n    });\n    return subElements;\n  }\n\n  remove() {\n    if (this.element) this.element.remove();\n    this.element = null;\n  }\n\n  destroy() {\n    this.remove();\n  }\n\n  toHTML(htmlString) {\n    const htmlObject = document.createElement('div');\n    htmlObject.innerHTML = htmlString;\n    return htmlObject.firstElementChild;\n  }\n}\n","const header = [\n  {\n    id: 'images',\n    title: 'Image',\n    sortable: false,\n    template: data => {\n      return `\n          <div class=\"sortable-table__cell\">\n            <img class=\"sortable-table-image\" alt=\"Image\" src=\"${data[0].url}\">\n          </div>\n        `;\n    }\n  },\n  {\n    id: 'title',\n    title: 'Name',\n    sortable: true,\n    sortType: 'string'\n  },\n  {\n    id: 'quantity',\n    title: 'Quantity',\n    sortable: true,\n    sortType: 'number'\n  },\n  {\n    id: 'price',\n    title: 'Price',\n    sortable: true,\n    sortType: 'number'\n  },\n  {\n    id: 'status',\n    title: 'Status',\n    sortable: true,\n    sortType: 'number',\n    template: data => {\n      return `<div class=\"sortable-table__cell\">\n          ${data > 0 ? 'Active' : 'Inactive'}\n        </div>`;\n    }\n  },\n];\n\nexport default header;\n","import RangePicker from '~components/range-picker/index.js';\nimport SortableTable from '~components/sortable-table/index.js';\nimport ColumnChart from '~components/column-chart/index.js';\nimport header from './bestsellers-header.js';\n\nexport default class Page {\n  components = {};\n  from = (() => {\n    const date = new Date();\n    date.setMonth(date.getMonth() - 1);\n    return date;\n  })();\n  to = new Date();\n\n  onChangeRange = event => {\n    this.from = event.detail.from;\n    this.to = event.detail.to;\n    this.updateComponents();\n  };\n\n  render() {\n    this.initComponents();\n    this.element = this.toHTML(this.getTemplate());\n    this.renderComponents();\n    this.subElements = this.getSubElements(this.element);\n    this.addEventListeners();\n    return this.element;\n  }\n\n  getTemplate() {\n    return `\n      <div class=\"dashboard full-height flex-column\">\n        <div class=\"content__top-panel\">\n          <h2 class=\"page-title\">Панель управления</h2>\n          <div data-rangePicker></div>\n        </div>\n        <div class=\"dashboard__charts\">\n          <div data-ordersChart></div>\n          <div data-salesChart></div>\n          <div data-customersChart></div>\n        </div>\n        <h3 class=\"block-title\">Лидеры продаж</h3>\n        <div data-sortableTable></div>\n      </div>\n    `;\n  }\n\n  initComponents() {\n    const rangePicker = new RangePicker({ from: this.from, to: this.to });\n    rangePicker.element.dataset.element = 'rangePicker';\n\n    const ordersChart = new ColumnChart({\n      label: 'orders',\n      link: '/sales',\n      url: 'api/dashboard/orders',\n      range: { from: this.from, to: this.to }\n    });\n    ordersChart.element.classList.add('dashboard__chart_orders');\n    ordersChart.element.dataset.element = 'ordersChart';\n\n    const salesChart = new ColumnChart({\n      label: 'sales',\n      formatHeading: data => `$${data}`,\n      url: 'api/dashboard/sales',\n      range: { from: this.from, to: this.to }\n    });\n    salesChart.element.classList.add('dashboard__chart_sales');\n    salesChart.element.dataset.element = 'salesChart';\n\n    const customersChart = new ColumnChart({\n      label: 'customers',\n      url: 'api/dashboard/customers',\n      range: { from: this.from, to: this.to }\n    });\n    customersChart.element.classList.add('dashboard__chart_customers');\n    customersChart.element.dataset.element = 'customersChart';\n\n    const sortableTable = this.initSortableTable();\n\n    this.components = {\n      rangePicker,\n      ordersChart,\n      salesChart,\n      customersChart,\n      sortableTable\n    };\n  }\n\n  initSortableTable() {\n    const bestsellersUrl = new URL('api/dashboard/bestsellers', process.env.BACKEND_URL);\n    bestsellersUrl.searchParams.set('from', this.from.toISOString());\n    bestsellersUrl.searchParams.set('to', this.to.toISOString());\n    const sortableTable = new SortableTable(header, {\n      url: bestsellersUrl.toString()\n    });\n    sortableTable.element.dataset.element = 'sortableTable';\n\n    return sortableTable;\n  }\n\n  renderComponents() {\n    for (const component of Object.entries(this.components)) {\n      this.element.querySelector(`[data-${component[0]}]`).replaceWith(component[1].element);\n    }\n  }\n\n  updateComponents() {\n    this.components.ordersChart.update(this.from, this.to);\n    this.components.salesChart.update(this.from, this.to);\n    this.components.customersChart.update(this.from, this.to);\n\n    const sortableTable = this.initSortableTable();\n    this.subElements.sortableTable.replaceWith(sortableTable.element);\n    this.components.sortableTable.destroy();\n    this.components.sortableTable = sortableTable;\n  }\n\n  getSubElements(root) {\n    const subElements = {};\n    [...root.querySelectorAll('[data-element]')].forEach(el => {\n      subElements[el.dataset.element] = el;\n    });\n    return subElements;\n  }\n\n  addEventListeners() {\n    document.addEventListener('date-select', this.onChangeRange);\n  }\n\n  removeEventListeners() {\n    document.removeEventListener('date-select', this.onChangeRange);\n  }\n\n  remove() {\n    if (this.element) this.element.remove();\n    this.element = null;\n  }\n\n  destroy() {\n    this.remove();\n    this.removeEventListeners();\n    for (const component of Object.values(this.components)) {\n      component.destroy();\n    }\n  }\n\n  toHTML(htmlString) {\n    const htmlObject = document.createElement('div');\n    htmlObject.innerHTML = htmlString;\n    return htmlObject.firstElementChild;\n  }\n}\n"],"sourceRoot":""}